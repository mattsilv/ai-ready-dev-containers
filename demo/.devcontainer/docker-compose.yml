services:
  backend:
    build:
      context: ../backend
      target: development
    volumes:
      - ../backend:/app
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/demo_db
    depends_on:
      db:
        condition: service_healthy
    command: sleep infinity
    user: vscode
    tty: true
    stdin_open: true
    labels:
      - "com.demo.app=ai-ready-demo"
      - "com.demo.component=backend"
      - "com.demo.managed-by=start-script"

  frontend:
    build:
      context: ../frontend
      target: production
    ports:
      - "3001:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8001
    labels:
      - "com.demo.app=ai-ready-demo"
      - "com.demo.component=frontend"
      - "com.demo.managed-by=start-script"

  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: demo_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../.docker/init-scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d demo_db"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "com.demo.app=ai-ready-demo"
      - "com.demo.component=database"
      - "com.demo.managed-by=start-script"

volumes:
  postgres-data:
  frontend-node-modules:
